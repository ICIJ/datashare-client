version: 2

workflows:
  version: 2
  test_and_publish_doc:
    jobs:
      - build
      - lint:
          requires:
            - build
      - test:
          requires:
            - build
      - generate_doc:
          requires:
            - build
          filters:
            branches:
              only:
                - master
      - publish_doc:
          requires:
            - generate_doc
          filters:
            branches:
              only:
                - master
jobs:

  # This job will build the client environment with the correct dependencies
  build:
    docker:
      - image: cimg/node:18.19
    working_directory: ~/datashare-client
    steps:
      - checkout
      - restore_cache:
          name: Restore dependencies cache from previous builds
          key: dependencies-cache-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: make install
      - save_cache:
          name: Save dependencies cache for future builds
          key: dependencies-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - save_cache:
          name: Save the app bundle (repo + dependencies) for downstream jobs
          key: bundle-cache-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/datashare-client

  # This job will run linters on the vue and js code
  lint:
    docker:
      - image: cimg/node:18.19
    working_directory: ~/datashare-client
    steps:
      - restore_cache:
          name: Restore app bundle (repo + dependencies) from the `build` job
          key: bundle-cache-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Run linter
          command: yarn lint

  # This job will run unit tests for the client
  test:
    resource_class: large
    docker:
      - image: cimg/node:18.19
      - image: docker.elastic.co/elasticsearch/elasticsearch:7.9.1
        environment:
          - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
          - "discovery.type=single-node"
          - "cluster.name=datashare"
          # CORS
          - "http.cors.enabled=true"
          - "http.cors.allow-origin=*"
          - "http.cors.allow-methods=OPTIONS, HEAD, GET, POST, PUT, DELETE"
        name: elasticsearch
    working_directory: ~/datashare-client
    steps:
      - restore_cache:
          name: Restore app bundle (repo + dependencies) from the `build` job
          key: bundle-cache-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Run unit tests
          command: yarn test:unit --silent --maxWorkers 2
      - run:
          name: Make distribution
          command: make dist

  # This job will generate the API documentation
  generate_doc:
    docker:
      - image: cimg/node:18.19
    working_directory: ~/datashare-client
    steps:
      - restore_cache:
          name: Restore app bundle (repo + dependencies) from the `build` job
          key: bundle-cache-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Generate the doc
          command: make doc
      - save_cache:
          name: Save the repository including the generated doc for downstream jobs
          key: doc-cache-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/datashare-client

  # This job wll publish the doc to Datashare central Wiki
  publish_doc:
    docker:
      - image: cimg/node:18.19
    working_directory: ~/datashare-client
    steps:
      - restore_cache:
          name: Restore app bundle (repo + dependencies) from the `build` job
          key: doc-cache-{{ .Environment.CIRCLE_SHA1 }}
      - run:
           name: Ensure rsync is installed
           command: (sudo apt update || /bin/true) && sudo apt install rsync
      - run:
           name: Prepare SSH directory
           command: |
             mkdir -p ~/.ssh
             chmod 700 ~/.ssh
      - add_ssh_keys:
          fingerprints:
            # This deploy key has read-write permission on ICIJ/datashare-docs repository
            # @see https://app.circleci.com/settings/project/github/ICIJ/datashare-client/ssh
            # @see https://github.com/ICIJ/datashare-docs/settings/keys
            - "d0:5d:4a:ba:8a:55:2e:1f:6f:ad:57:c5:e0:21:ce:34"
      - run:
          name: Configure Git identity
          command: |
            git config --global user.name $CIRCLE_USERNAME
            git config --global user.email "engineering@icij.org"
      - run:
          name: Checkout ICIJ/datashare-docs repository
          command: |
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            git clone git@github.com:ICIJ/datashare-docs.git ~/datashare-docs
      - run:
          name: Copy generated doc inside the Wiki with a flatten structure (no subdirectories)
          command: |
            rsync --del -r ~/datashare-client/dist/docs/ ~/datashare-docs/developers/frontend
      - run:
          name: Add/Commit changes to the Wiki (if any)
          command: |
            git -C ~/datashare-docs add -A
            git -C ~/datashare-docs commit -am "doc: update client documentation [${CIRCLE_SHA1}]" || true
      - run:
          name: Push changes to the Documentation (if any)
          command: git -C ~/datashare-docs push origin main
