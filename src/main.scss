@import './utils/settings.scss';
@import './utils/animations.scss';
@import './utils/_multiselect.scss';
@import './assets/fonts/Lato/stylesheet.css';
@import './assets/fonts/Medel/stylesheet.css';

@import '~node_modules/vue3-perfect-scrollbar/dist/vue3-perfect-scrollbar.css';
@import '~node_modules/v-calendar/dist/style.css';
@import '~node_modules/bootstrap/scss/bootstrap';
// BootstrapVue and its default variables
@import '~node_modules/bootstrap-vue-next/dist/bootstrap-vue-next.css';
// @TODO bundle Murmur so the import is easier
@import '~node_modules/@icij/murmur-next/dist/lib/murmur.css';


html {
  font-size: 14px;
}

body {
  overflow-x: hidden;
  max-width: 100vw;
}

@keyframes rotateLogo {
  100% {
    transform: translate(-50%, -50%) rotate(1turn);
  }
}

.splashscreen {
  align-items: center;
  background: $dark;
  bottom: 0;
  color: white;
  display: flex;
  justify-content: center;
  left: 0;
  position: fixed;
  right: 0;
  top: 0;

  &__panel {
    font-weight: bolder;
    margin: $spacer;
    max-width: 330px;
    text-align: center;

    &__spinner {
      border-radius: $spacer;
      display: flex;
      height: 130px;
      margin-bottom: $spacer;
      overflow: hidden;
      position: relative;
      width: 130px;

      &:before {
        animation: rotateLogo 4s linear infinite;
        background-image: linear-gradient(#48C2FC, #48C2FC),
          linear-gradient($secondary, $secondary),
          linear-gradient(#48C2FC, #48C2FC),
          linear-gradient($secondary, $secondary);
        background-position: 0 0, 100% 0, 100% 100%, 0 100%;
        background-repeat: no-repeat;
        background-size: 50% 50%, 50% 50%;
        border-radius: inherit;
        content: "";
        height: 200%;
        left: 50%;
        position: absolute;
        top: 50%;
        transform: translate(-50%, -50%);
        width: 200%;
        z-index: -1;
      }

      &:after {
        background: white url('@/assets/images/logo-color-symbol.svg') no-repeat center center;
        background-size: 80% 80%;
        border-radius: inherit;
        content: "";
        display: block;
        height: 95%;
        margin: auto;
        width: 95%;
      }
    }
  }
}

.text-special {
  font-family: $special-font-family;
}

.content-placeholder {
  padding: $spacer;
}

.tooltip {
  &-lg .tooltip-inner {
    max-width: 90vw;
  }
}

// Truncated element in a flexbox child must not fully collapse when the
// flex container is resized down.
// @see https://drafts.csswg.org/css-flexbox/#min-size-auto
.flex-truncate,
.flex-truncate.d-flex > *,
.flex-truncate.d-inline-flex > *,
.flex-truncate.row > [class*='col-'],
.flex-truncate.row > .col,
.flex-truncate .d-flex > *,
.flex-truncate .d-inline-flex > *,
.flex-truncate .row > [class*='col-'],
.flex-truncate .row > .col,
.flex-truncate .list-group-item,
.flex-truncate .text-truncate {
  min-width: 0;
}

@each $variant,
$value in $theme-colors {
  .popover-magnified-#{$variant} {
    @include popover-magnified-variant($value);
  }

  .popover-#{$variant} {
    @include popover-variant($value);
  }
}

.table.card > tbody > tr:last-of-type > td,
.table-responsive.card > .table > tbody > tr:last-of-type > td {
  border-bottom-width: 0;
}

.popover {

  .popover-body {
    & >.dropdown-menu {
      background: inherit;
      color: inherit;
      float: none;

      .dropdown-item:not(.active) {
        background: transparent;
        color: inherit;

        &:hover {
          background: rgba(white, 0.1);
        }
      }
    }

    .card-header {
      background-color: transparent;

      .nav-item .nav-link {

        &:hover {
          border-color: transparent;
          text-decoration: underline;
        }
      }

      .nav-item .nav-link.active {
        border-color: transparent;
        font-weight: bold;
      }
    }

    .card-body {
      background: $popover-header-bg;
    }
  }

  &.popover-body-p-0 {
    .popover-body {
      padding: 0;

      & .vc-container.vc-gray {
        border-radius: 4px;
      }

    }
  }

  &.popover-body-overflow-hidden:not(.dropdown-menu) .popover-body {
    border-radius: inherit;
    overflow: hidden;
  }

  &.bs-popover-bottom > .popover-arrow::after,
  &.bs-popover-auto[data-popper-placement^="bottom"] > .popover-arrow::after {
    border-bottom-color: $popover-header-bg;
  }
}

#b-toaster-top-right.b-toaster .b-toaster-slot,
#b-toaster-top-left.b-toaster .b-toaster-slot,
#b-toaster-bottom-right.b-toaster .b-toaster-slot,
#b-toaster-bottom-left.b-toaster .b-toaster-slot {

  &,
  .b-toast,
  .b-toast .toast {
    max-width: 460px;
  }

  .b-toast {
    .toast, .toast-header {
      font-size: 1rem;
      padding-right: 2.5rem;
    }

    .toast-header {
      background-color: transparent;
      border: 0;
    }

    .toast {
      box-shadow: $box-shadow-sm;
    }
    .close {
      position: absolute;
      right: $spacer-xs;
      padding: 0 $spacer-xs;
      top: $spacer-xs;
      bottom: $spacer-xs;
      color: inherit;
      border-left: 1px solid currentColor;
      font-weight: lighter;
      font-size: 1.5rem;
    }

    @each $color, $value in $theme-colors {
      &.b-toast-#{$color} .close {
        border-color: theme-color-level($color, 40%);
      }
    }
  }
}

.vc-popover-content-wrapper {
  z-index: $zindex-tooltip !important;
  .vc-container {
    --yellow-500: #{$tertiary};
    --yellow-400: #{lighten($tertiary, 5)};
    --yellow-300: #{lighten($tertiary, 10)};
    --yellow-200: #{lighten($tertiary, 15)};
    --yellow-100: #{lighten($tertiary, 20)};
    --gray-900: #{$app-sidebar-bg};

    font-size: 0.8rem;
    color: inherit;
    padding: 0;
    margin: 0;
    font-family: $font-family-base;

    .vc-highlights {
      .vc-day-layer {
        .vc-highlight-base-start,
        .vc-highlight-base-middle,
        .vc-highlight-base-end {
          background-color: rgba($tertiary, 0.4) !important;
        }
      }
    }

    .vc-day-content:hover {
      background-color: rgba($tertiary, 0.1) !important;
    }
  }
}
