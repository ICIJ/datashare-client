@import './utils/settings.scss';
@import './utils/animations.scss';
@import './utils/multiselect.scss';
@import './utils/toastify.scss';
@import '@/assets/fonts/Inter/stylesheet.css';
@import '@/assets/fonts/Medel/stylesheet.css';

@import '~node_modules/vue3-perfect-scrollbar/dist/style.css';
@import '~node_modules/v-calendar/dist/style.css';
@import '~node_modules/bootstrap/scss/bootstrap';
@import '~node_modules/vue3-toastify/dist/index.css';
// BootstrapVue and its default variables
@import '~node_modules/bootstrap-vue-next/dist/bootstrap-vue-next.css';
// @TODO bundle Murmur so the import is easier
@import '~node_modules/@icij/murmur-next/dist/lib/murmur.css';

// Must be after bootstrap
@import './utils/alerts.scss';
@import './utils/buttons.scss';

.dropdown-item {
  border-radius: var(--bs-border-radius);

  &.active {
    font-weight: 500;

    &:hover {
      background: var(--bs-dropdown-link-hover-bg);
    }
  }
}

.form-check .form-check-input:checked + .form-check-label {
  font-weight: 500;
  color: var(--bs-action-text-emphasis);
}

.form-control:hover,
.form-control.pseudo-hover,
.pseudo-hover-all .form-control {
  border-color: $input-hover-border-color;
}

html {
  font-size: 1rem;
}

body {
  overflow: auto;

  // Disable overflow scrollbar when the sidebar is in full width and not closed
  &:has(.app-sidebar--full-width:not(.app-sidebar--closed)) {
    overflow: hidden;
  }
}

@keyframes rotateLogo {
  100% {
    transform: translate(-50%, -50%) rotate(1turn);
  }
}

.splashscreen {
  align-items: center;
  background: darken($action, 10%);
  bottom: 0;
  color: white;
  display: flex;
  justify-content: center;
  left: 0;
  position: fixed;
  right: 0;
  top: 0;

  &__panel {
    font-weight: bolder;
    margin: $spacer;
    max-width: 330px;
    text-align: center;

    &__spinner {
      border-radius: $spacer;
      display: flex;
      height: 130px;
      margin-bottom: $spacer;
      overflow: hidden;
      position: relative;
      width: 130px;

      &:before {
        animation: rotateLogo 4s linear infinite;
        background-image: linear-gradient(#48C2FC, #48C2FC),
          linear-gradient($primary, $primary),
          linear-gradient(#48C2FC, #48C2FC),
          linear-gradient($primary, $primary);
        background-position: 0 0, 100% 0, 100% 100%, 0 100%;
        background-repeat: no-repeat;
        background-size: 50% 50%, 50% 50%;
        border-radius: inherit;
        content: "";
        height: 200%;
        left: 50%;
        position: absolute;
        top: 50%;
        transform: translate(-50%, -50%);
        width: 200%;
        z-index: -1;
      }

      &:after {
        background: white url('@/assets/images/logo-color-symbol.svg') no-repeat center center;
        background-size: 80% 80%;
        border-radius: inherit;
        content: "";
        display: block;
        height: 95%;
        margin: auto;
        width: 95%;
      }
    }
  }
}

.text-special {
  font-family: $special-font-family;
}

.content-placeholder {
  padding: $spacer;
}

.tooltip {
  &-lg .tooltip-inner {
    max-width: 90vw;
  }
}

// Truncated element in a flexbox child must not fully collapse when the
// flex container is resized down.
// @see https://drafts.csswg.org/css-flexbox/#min-size-auto
.flex-truncate,
.flex-truncate.d-flex > *,
.flex-truncate.d-inline-flex > *,
.flex-truncate.row > [class*='col-'],
.flex-truncate.row > .col,
.flex-truncate .d-flex > *,
.flex-truncate .d-inline-flex > *,
.flex-truncate .row > [class*='col-'],
.flex-truncate .row > .col,
.flex-truncate .list-group-item,
.flex-truncate .text-truncate {
  min-width: 0;
}

@each $variant,
$value in $theme-colors {
  .popover-magnified-#{$variant} {
    @include popover-magnified-variant($value);
  }

  .popover-#{$variant} {
    @include popover-variant($value);
  }
}

.table.card > tbody > tr:last-of-type > td,
.table-responsive.card > .table > tbody > tr:last-of-type > td {
  border-bottom-width: 0;
}

.popover {

  .popover-body {
    & >.dropdown-menu {
      background: inherit;
      color: inherit;
      float: none;

      .dropdown-item:not(.active) {
        background: transparent;
        color: inherit;

        &:hover {
          background: rgba(var(--bs-body-bg-rgb), 0.7);
        }
      }
    }

    .card-header {
      background-color: transparent;

      .nav-item .nav-link {

        &:hover {
          border-color: transparent;
          text-decoration: underline;
        }
      }

      .nav-item .nav-link.active {
        border-color: transparent;
        font-weight: bold;
      }
    }

    .card-body {
      background: $popover-header-bg;
    }
  }

  &.popover-body-p-0 {
    .popover-body {
      padding: 0;

      & .vc-container.vc-gray {
        border-radius: 4px;
      }

    }
  }

  &.popover-body-overflow-hidden:not(.dropdown-menu) .popover-body {
    border-radius: inherit;
    overflow: hidden;
  }
}

html[data-bs-theme] body .Toastify {
  --toastify-toast-width: 470px;

  &__toast {
    &-body {
      padding: 0;
    }

    &--error {
      background: var(--bs-danger-text-emphasis);
      color: var(--bs-danger-bg-subtle);
    }

    @each $state in map-keys($theme-colors) {
      &--#{$state} {
        background: var(--bs-#{$state}-bg-subtle);
        color: var(--bs-#{$state}-text-emphasis);
      }
    }
  }
}

.vc-popover-content-wrapper {
  z-index: $zindex-tooltip !important;

  .vc-popover-content.direction-top {
    filter: drop-shadow(0 0.25rem 0.5rem rgba(black, .4));
  }
  .vc-popover-content.direction-bottom {
    filter: drop-shadow(0 -0.25rem 0.5rem rgba(black, .4));
  }
}

.vc-container, .vc-popover-content {

  &.vc-yellow {
    --vc-accent-500: #{$secondary};
    --vc-accent-400: #{lighten($secondary, 5)};
    --vc-accent-300: #{lighten($secondary, 10)};
    --vc-accent-200: #{lighten($secondary, 15)};
    --vc-accent-100: #{lighten($secondary, 20)};
  }

  --vc-gray-900: #{darken($app-context-sidebar-bg, 5%)};
  --vc-gray-800: #{$app-context-sidebar-bg};
  --vc-border: #{$border-color};
  --vc-popover-content-border: #{$border-color};

  font-size: 0.8rem;
  color: inherit;
  padding: 0;
  margin: 0;
  font-family: $font-family-base;

  &.vc-dark {
    --vc-bg: var(--vc-gray-900);
    --vc-border: var(--vc-gray-800);
    --vc-popover-content-border: var(--vc-gray-800);
    --vc-weekday-color: var(--vc-accent-500);

    [type=button] {
      background: transparent;
    }
  }

  .vc-highlights {
    .vc-day-layer {

      .vc-highlight-base-start,
      .vc-highlight-base-middle,
      .vc-highlight-base-end {
        background-color: rgba($secondary, 0.4) !important;
      }
    }
  }

  .vc-day-content:hover {
    background-color: rgba($secondary, 0.1) !important;
  }
}

.tab-group-navigation {
  &--nowrap:not(.flex-column) {
    overflow: auto;
    flex-wrap: nowrap;
    padding-bottom: $spacer-xxs;
    white-space: nowrap;
  }

  &--flush {
    & .nav-item:first-of-type a,& .nav-item:first-of-type button {
      padding-left: 0;
    }

    & .nav-item:last-of-type a,& .nav-item:last-of-type button {
      padding-right: 0;
    }
  }
}

.tab-group-navigation-entry {

   & .nav-link {
     --color: var(--bs-secondary-text-emphasis);

     color: var(--color);
     padding: 10px $spacer-xs;

     &.active,
     &.router-link-active {

       --color: var(--bs-emphasis-color);
       background: transparent;
       border-bottom: 2px solid var(--bs-primary);
       font-weight: 500;

       .nav-tabs.flex-column > & {
         border-left: 2px solid var(--bs-primary);
       }
     }
     &.nav-link:hover {
       --color: var(--bs-emphasis-color);
       border-color: var(--bs-primary);

       .nav-tabs.flex-column > & {
         border-left: 2px solid var(--bs-primary);
       }
     }

     .nav-tabs.flex-column > & {
       border-bottom: 0;
       padding: 0 $spacer;
       border-left: 2px solid transparent;
     }
   }

   & .badge {
     background: var(--color);
     color: var(--bs-body-bg);
     transition: $transition-base;
   }
 }

